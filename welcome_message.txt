--------------------------------------------------------------------------------
                      <Matlab Phase Retrieval Sandbox>
                           Copyright 2016 TUM, M7
         Tested with Matlab R2016a (9.0.0.341360) 64-bit (glnxa64)
                                March 31, 2016
--------------------------------------------------------------------------------

Welcome to the Matlab Phase Retrieval Sandbox! If you have started
your Matlab session in the phase_retrieval root folder
(i.e. '<your_path>/phase_retrieval'), you should be ready to go. You
may want to try the following:

  % Check out the basic phase retrieval algorithms 
  % using examples in the documentation:
  >> help er 
  >> help bio
  >> help hio_fienup
  >> help hio_bauschke

  % You may compare the efficiency of these algorithms using the
  % following routine:
  % Define 2D density as two gaussians in the box between -1 and 1
  % with appropriate means, covariance matrices, and number of pts:
  >> [g,sqrtI,x] = two_gaussians(2, 'm1', [0.6 0.3], 'm2', [-0.3 0], ...
                                'Sigma1', [50 2; 2 10], ...
                                'Sigma2', [25 -3; 18 10], ...
                                 'nPts', [200 200]);
  % Check out the density:
  >> contour(x{1}, x{2}, g)

  % Run phase retrieval with flat initial approximation:
  >> [gOut eOut] = compare_algorithms(zeros(size(g)), sqrtI, 1000, @er, @hio_bauschke, @hio_simplified, @hio_fienup);
  % Resulting approximations are in gOut{1}, gOut{2}, ...
  % Resulting energies are in eOut{1}, eOut{2}, ...
  >> figure; loglog(eOut{1})
  >> figure; contour(gOut{1})

%%%% (Under developement - for debugging purposes only)%%%%%%%%%%%%%%%%%%%%%%%%
%  % Check out the wasserstein update:
%  >> g = m.density;
%  >> sqrtI = abs(m.ft);
%  >> update_params.x_list = m.grid.xAxes{1};
%  >> update_params.k_list = m.grid.kAxes{1};
%  >> update_params.h = 1e-3;
%  >> update_params.num_mass_pcs = 50;
%  >> [g_new, error, w_hat_s, w_com] = wasserstein_1d(g, sqrtI, update_params);
%
%  % Check out the object-oriented implementation of these examples:
%  % Create a one-dimensional example density called 'm'
%  >> mol_two_gaussians_1d;
%  % Create an error-reduction algorithm instance called 'er1'
%  >> alg_er_1d;
%  % Perform 1000 update steps and plot the result
%  >> er1 = er1.update(1000);
%  >> er1 = er1.plot();
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
